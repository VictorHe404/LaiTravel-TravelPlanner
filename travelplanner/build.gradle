plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.laioffer'
version = '0.0.1-SNAPSHOT'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

repositories { mavenCentral() }

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter' // (not strictly needed, but harmless)

    implementation 'com.fasterxml.jackson.core:jackson-databind' // optional; boot pulls jackson already
    implementation 'com.google.cloud:google-cloud-storage:2.23.0'
    implementation 'com.google.maps:google-maps-services:2.2.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly   'org.postgresql:postgresql'

    // Let Boot manage Hibernate/JTS if possible; if you must pin versions, ensure compatibility with Boot 3.5 BOM
    implementation 'org.hibernate.orm:hibernate-spatial:6.1.7.Final'
    implementation 'org.locationtech.jts:jts:1.19.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 测试
    //testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //testImplementation 'org.springframework.security:spring-security-test'
    //testImplementation 'org.testcontainers:junit-jupiter:1.20.3'
    //testImplementation 'org.testcontainers:postgresql:1.20.3'
}

tasks.named('test') { useJUnitPlatform() }

tasks.test{
    systemProperty "spring.profiles.active", "test"
}

// 保险起见，防止有别的依赖把 H2 传递进来
configurations.all {
    exclude group: 'com.h2database', module: 'h2'
}